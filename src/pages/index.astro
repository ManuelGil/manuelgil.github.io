---
import { Filter } from 'lucide-astro';
import Layout from '../layouts/Layout.astro';
import ProjectCard from '../components/ProjectCard.astro';

// Sample project data
const projects = [
  {
    title: 'Reset Windows Update Tool',
    description:
      'A simple and effective tool to reset the Windows Update components in your Windows operating system. Fix Windows Update issues with a single click.',
    category: 'Windows Tools',
    tags: ['Windows', 'Batch Script', 'C++'],
    links: {
      source: 'https://github.com/ManuelGil/Reset-Windows-Update-Tool',
      demo: 'https://wureset.com/',
    },
  },
  {
    title: 'Auto Barrel for VSCode',
    description:
      'A powerful tool for automating the creation of TypeScript barrel files in your projects. Boost your productivity and streamline your development workflow.',
    category: 'Development Tools',
    tags: ['VSCode Extension', 'TypeScript'],
    links: {
      source: 'https://github.com/ManuelGil/vscode-auto-barrel',
      demo: 'https://marketplace.visualstudio.com/items?itemName=imgildev.vscode-auto-barrel',
    },
  },
  {
    title: 'JSON Flow',
    description:
      'Open-source tool for Visual Studio Code that helps you visualize and understand complex JSON structures. Improve your JSON editing experience with this powerful extension.',
    category: 'Development Tools',
    tags: ['VSCode Extension', 'TypeScript', 'React', 'Tailwind CSS'],
    links: {
      source: 'https://github.com/ManuelGil/vscode-json-flow',
      demo: 'https://marketplace.visualstudio.com/items?itemName=imgildev.vscode-json-flow',
    },
  },
  {
    title: 'Mustache - Syntax highlighting, snippets, and more',
    description:
      'A powerful extension for Visual Studio Code that provides syntax highlighting, snippets, and other features for Mustache templates.',
    category: 'Development Tools',
    tags: ['VSCode Extension', 'JavaScript'],
    links: {
      source: 'https://github.com/ManuelGil/vscode-mustache-snippets',
      demo: 'https://marketplace.visualstudio.com/items?itemName=imgildev.vscode-mustache-snippets',
    },
  },
  {
    title: 'Angular File Generator',
    description:
      'Create files for your Angular projects with a single command. Boost your productivity and streamline your development workflow.',
    category: 'Development Tools',
    tags: ['VSCode Extension', 'TypeScript'],
    links: {
      source: 'https://github.com/ManuelGil/vscode-angular-generator',
      demo: 'https://marketplace.visualstudio.com/items?itemName=imgildev.vscode-angular-generator',
    },
  },
  {
    title: 'NestJS File Generator',
    description:
      'Create files for your NestJS projects with a single command. Boost your productivity and streamline your development workflow.',
    category: 'Development Tools',
    tags: ['VSCode Extension', 'TypeScript'],
    links: {
      source: 'https://github.com/ManuelGil/vscode-nestjs-generator',
      demo: 'https://marketplace.visualstudio.com/items?itemName=imgildev.vscode-nestjs-generator',
    },
  },
  {
    title: 'Astro File Generator',
    description:
      'Create files for your Astro projects with a single command. Boost your productivity and streamline your development workflow.',
    category: 'Development Tools',
    tags: ['VSCode Extension', 'TypeScript', 'Alpine.js', 'Tailwind CSS'],
    links: {
      source: 'https://github.com/ManuelGil/vscode-astro-generator',
      demo: 'https://marketplace.visualstudio.com/items?itemName=imgildev.vscode-astro-generator',
    },
  },
  {
    title: 'T3 Stack / NextJS / ReactJS File Generator',
    description:
      'Create files for your Next.js and React.js projects with a single command. Boost your productivity and streamline your development workflow.',
    category: 'Development Tools',
    tags: ['VSCode Extension', 'TypeScript'],
    links: {
      source: 'https://github.com/ManuelGil/vscode-nextjs-generator',
      demo: 'https://marketplace.visualstudio.com/items?itemName=imgildev.vscode-nextjs-generator',
    },
  },
];

// Extract unique categories and add 'All' option
const categories = [
  'All',
  ...new Set(projects.map((project) => project.category)),
];
---

<Layout title="Manuel Gil - Open Source Portfolio">
  <main class="min-h-screen bg-gray-900">
    <!-- Hero Section -->
    <section class="relative px-4 py-16 sm:px-6 lg:px-8">
      <div class="mx-auto max-w-2xl text-center">
        <h1
          class="mb-4 bg-gradient-to-r from-primary to-accent bg-clip-text text-6xl font-bold text-transparent"
        >
          Explore My Open Source Projects
        </h1>
        <p class="mb-8 text-xl text-gray-300">
          Building tools that empower developers and foster collaboration in the
          open source community.
        </p>
        <div class="flex justify-center gap-4">
          <a
            href="https://github.com/sponsors/ManuelGil"
            target="_blank"
            rel="noopener noreferrer"
            class="rounded-md border border-[#ff6b00]/20 bg-[#1c1c1c] px-6 py-2.5 text-[#ff6b00] shadow-[0_0_15px_rgba(255,107,0,0.15)] transition-all duration-200 hover:bg-[#ff6b00]/10 hover:shadow-[0_0_25px_rgba(255,107,0,0.25)]"
          >
            GitHub Sponsors
          </a>
          <a
            href="https://www.paypal.com/paypalme/ManuelFGil"
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center gap-2 rounded-md border border-[#0070ba]/20 bg-[#1c1c1c] px-6 py-2.5 text-[#0070ba] shadow-[0_0_15px_rgba(0,112,186,0.15)] transition-all duration-200 hover:bg-[#0070ba]/10 hover:shadow-[0_0_25px_rgba(0,112,186,0.25)]"
          >
            <span class="text-lg">☕</span> Support via PayPal
          </a>
        </div>
      </div>
    </section>

    <!-- Projects Section -->
    <section class="bg-gray-100 px-4 py-16 sm:px-6 lg:px-8">
      <div class="mx-auto max-w-5xl">
        <!-- Category Filter -->
        <div class="mb-6 flex items-center gap-2">
          <Filter class="h-5 w-5 text-gray-500" />
          <div class="flex flex-wrap gap-2" id="categories">
            {
              categories.map((category) => (
                <button
                  data-category={category}
                  class:list={[
                    'px-4 py-2 rounded-full text-sm font-medium transition-colors border border-gray-200',
                    {
                      'bg-blue-600 text-white': category === 'All',
                      'bg-white text-gray-600 hover:bg-gray-100':
                        category !== 'All',
                    },
                  ]}
                >
                  {category}
                </button>
              ))
            }
          </div>
        </div>

        <!-- Projects Grid -->
        <div
          class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3"
          id="projects"
        >
          {projects.map((project) => <ProjectCard {...project} />)}
        </div>

        <!-- Empty State (hidden by default) -->
        <div id="empty-state" class="hidden py-12 text-center">
          <p class="text-gray-500">No projects found in this category.</p>
        </div>
      </div>
    </section>

    <!-- Footer -->
    <footer class="bg-gray-900 py-6 text-center text-sm text-gray-300">
      <p>
        Built with ❤️ for the developer community. Together, we build the future
        of tech.
      </p>
    </footer>
  </main>

  <script>
    // Client-side filtering
    const categories = document.querySelector('#categories');
    const projectsGrid = document.querySelector('#projects');
    const emptyState = document.querySelector('#empty-state');
    const projectCards = projectsGrid.children;
    let selectedCategory = 'All';

    categories.addEventListener('click', (e) => {
      const button = e.target.closest('button');
      if (!button) return;

      // Update button styles
      categories.querySelectorAll('button').forEach((btn) => {
        btn.classList.remove('bg-blue-600', 'text-white');
        btn.classList.add('bg-white', 'text-gray-600', 'hover:bg-gray-100');
      });
      button.classList.remove('bg-white', 'text-gray-600', 'hover:bg-gray-100');
      button.classList.add('bg-blue-600', 'text-white');

      // Filter projects
      selectedCategory = button.dataset.category;
      let visibleCount = 0;

      Array.from(projectCards).forEach((card) => {
        const projectCategory = card.getAttribute('data-category');
        const visible =
          selectedCategory === 'All' || projectCategory === selectedCategory;
        card.style.display = visible ? '' : 'none';
        if (visible) visibleCount++;
      });

      // Toggle empty state
      emptyState.style.display = visibleCount === 0 ? 'block' : 'none';
    });
  </script>
</Layout>

<style>
  html {
    scroll-behavior: smooth;
  }
</style>
