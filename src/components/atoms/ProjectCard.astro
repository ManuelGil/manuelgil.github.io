---
interface Props {
  title: string;
  description: string;
  category: string;
  tags: string[];
  links: {
    source: string;
    demo: string;
  };
  image?: string; // Project image (optional)
  date?: string; // Project date (optional)
  'data-has-image'?: string; // Attribute to control if the image is displayed
  'data-has-date'?: string; // Attribute to control if the date is displayed
  sourceAriaLabel?: string; // To allow overriding the aria-label in the template
  demoAriaLabel?: string; // To allow overriding the aria-label in the template
}

// Component properties with default values
const {
  title,
  description,
  category,
  tags,
  links,
  image,
  date,
  'data-has-image': hasImage,
  'data-has-date': hasDate,
  sourceAriaLabel: customSourceAriaLabel,
  demoAriaLabel: customDemoAriaLabel,
} = Astro.props;

// Determine if the image/date should be displayed based on data attributes or the presence of values
const showImage = hasImage === 'true' || (image && image.length > 0);
const showDate = hasDate === 'true' || (date && date.length > 0);

// Generate aria labels for better accessibility
const sourceAriaLabel =
  customSourceAriaLabel || `View source code of ${title} on GitHub`;
const demoAriaLabel = customDemoAriaLabel || `View live demo of ${title}`;
---

<article
  class="overflow-hidden rounded-lg bg-white shadow-md transition-all duration-300 hover:translate-y-[-2px] hover:shadow-lg"
  data-category={category}
>
  {
    showImage && (
      <div class="relative h-48 overflow-hidden">
        <img
          src={image}
          alt={`Screenshot of project ${title}`}
          loading="lazy"
          decoding="async"
          fetchpriority="low"
          width="400"
          height="225"
          class="h-full w-full object-cover transition-transform duration-700 hover:scale-105"
          onload="this.classList.add('loaded')"
          onerror="this.onerror=null; this.src='/images/project-placeholder.png';"
        />
        <div
          class="img-placeholder absolute inset-0 flex items-center justify-center bg-gray-200"
          aria-hidden="true"
        >
          <span class="loading-spinner" />
        </div>
        {showDate && (
          <span
            class="absolute right-2 top-2 rounded bg-gray-900/80 px-2 py-1 text-xs text-white"
            title={`Published: ${date}`}
          >
            {date}
          </span>
        )}
      </div>
    )
  }
  <div class="p-6">
    <header>
      <h3
        class="group mb-2 flex items-center text-xl font-semibold text-gray-900"
      >
        <span>{title}</span>
        {
          category && (
            <span
              class="ml-2 rounded-full bg-gray-100 px-2 py-1 text-xs text-gray-600"
              title={`Category: ${category}`}
            >
              {category}
            </span>
          )
        }
      </h3>
    </header>
    <p class="mb-4 line-clamp-3 text-gray-600">
      {description}
    </p>
    <div
      class="mb-4 flex flex-wrap gap-2"
      role="list"
      aria-label="Project technologies"
    >
      {
        tags.map((tag) => (
          <span
            class="rounded bg-gray-100 px-2 py-1 text-xs font-medium text-gray-600 transition-colors hover:bg-gray-200"
            role="listitem"
            title={`Technology: ${tag}`}
          >
            {tag}
          </span>
        ))
      }
    </div>

    <!-- Links -->
    <footer class="mt-auto flex gap-4 border-t border-gray-100 pt-4">
      <a
        href={links.source}
        target="_blank"
        rel="noopener noreferrer"
        aria-label={sourceAriaLabel}
        title="View source code on GitHub"
        class="group inline-flex items-center gap-2 rounded-md px-2 py-1 text-sm text-gray-600 transition-all hover:text-primary focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
      >
        <svg
          class="h-5 w-5 transition-all group-hover:scale-110"
          viewBox="0 0 24 24"
          fill="currentColor"
          aria-hidden="true"
        >
          <path
            d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
          ></path>
        </svg>
        <span>View Code</span>
      </a>
      <a
        href={links.demo}
        target="_blank"
        rel="noopener noreferrer"
        aria-label={demoAriaLabel}
        title="View live demo of the project"
        class="group ml-auto inline-flex items-center gap-2 rounded-md px-2 py-1 text-sm text-gray-600 transition-all hover:text-accent focus:outline-none focus:ring-2 focus:ring-accent focus:ring-offset-2"
      >
        <svg
          class="h-5 w-5 transition-all group-hover:scale-110"
          viewBox="0 0 24 24"
          fill="currentColor"
          aria-hidden="true"
        >
          <path
            d="M14 4h-13v18h20v-11h1v12h-22v-20h14v1zm10 5h-1v-6.293l-11.646 11.647-.708-.708 11.647-11.646h-6.293v-1h8v8z"
          ></path>
        </svg>
        <span>View Demo</span>
      </a>
    </footer>
  </div>
</article>

<style>
  /* Ensure that the card has a consistent height */
  article {
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  /* Style to limit text lines */
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Estilos para el lazy loading de im√°genes */
  .img-placeholder {
    opacity: 1;
    transition: opacity 0.3s ease-out;
  }

  img.loaded + .img-placeholder {
    opacity: 0;
    pointer-events: none;
  }

  .loading-spinner {
    display: inline-block;
    width: 30px;
    height: 30px;
    border: 3px solid rgba(0, 0, 0, 0.1);
    border-radius: 50%;
    border-top-color: #ff6b00;
    animation: spin 1s ease-in-out infinite;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>
