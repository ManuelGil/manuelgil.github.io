---
import { achievements } from '../../data/achievements';
---

<section
  id="about"
  class="bg-gray-100 px-4 py-16 sm:px-6 lg:px-8"
  aria-labelledby="about-heading"
>
  <div class="container">
    <h2 id="about-heading" class="section-title text-gray-900">About Me</h2>
    <p class="mx-auto mb-8 mt-4 max-w-2xl text-center text-gray-700">
      Passionate full stack developer focused on building efficient, scalable,
      and user-friendly digital solutions. I enjoy creating tools that empower
      developers and improve workflows. My experience spans frontend, backend,
      and open-source projects, always with attention to detail and modern best
      practices.
    </p>
    <div
      class="grid grid-cols-1 gap-6 sm:grid-cols-2"
      aria-labelledby="highlights-heading"
    >
      {
        achievements.map((achievement, index) => (
          <div
            class="achievement-card fade-in-up p-6"
            style={`--index: ${index}`}
          >
            <div class="mb-4 flex items-center">
              <div class="group mr-3 flex h-10 w-10 items-center justify-center overflow-hidden rounded-full bg-primary text-white">
                <span
                  class="material-symbols-outlined icon-font transition-transform group-hover:scale-110"
                  aria-hidden="true"
                >
                  {achievement.icon}
                </span>
                <svg
                  class="icon-fallback hidden h-5 w-5"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                  aria-hidden="true"
                >
                  <path
                    d={
                      achievement.icon === 'workspace_premium'
                        ? 'M19 5h-2V3H7v2H5c-1.1 0-2 .9-2 2v1c0 2.55 1.92 4.63 4.39 4.94.63 1.5 1.98 2.63 3.61 2.96V19H7v2h10v-2h-4v-3.1c1.63-.33 2.98-1.46 3.61-2.96C19.08 12.63 21 10.55 21 8V7c0-1.1-.9-2-5-2zM5 8V7h2v3.82C5.84 10.4 5 9.3 5 8zm14 0c0 1.3-.84 2.4-2 2.82V7h2v1z'
                        : achievement.icon === 'psychology'
                          ? 'M13 3v2.43c2.86.48 5 2.94 5 5.85 0 2.91-2.14 5.37-5 5.85V20h-2v-2.15C7.14 17.37 5 14.91 5 12s2.14-5.37 5-5.85V3h2zm-1 12.41v-2.7c-1.86-.34-3.28-1.96-3.28-3.93 0-1.96 1.42-3.59 3.28-3.93v2.7c-.57.22-1 .73-1 1.34s.43 1.11 1 1.34v5.18zM10.72 12c0-.61.43-1.11 1-1.34v2.67c-.57-.22-1-.72-1-1.33z'
                          : achievement.icon === 'code'
                            ? 'M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z'
                            : 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v6h-2zm0 8h2v2h-2z'
                    }
                  />
                </svg>
              </div>
              <h3 class="text-xl font-bold text-white">{achievement.title}</h3>
            </div>

            <p class="text-muted">{achievement.description}</p>
          </div>
        ))
      }
    </div>
  </div>
</section>

<!-- The styles for this component are now centralized in global.css -->

<!-- Load Material Symbols icons -->
<link
  rel="stylesheet"
  href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0"
  media="all"
  fetchpriority="high"
  crossorigin="anonymous"
/>

<script>
  // Animation when scrolling to the section
  document.addEventListener('DOMContentLoaded', () => {
    const aboutSection = document.getElementById('about');

    // Check for reduced motion preference
    const prefersReducedMotion = window.matchMedia(
      '(prefers-reduced-motion: reduce)',
    ).matches;

    if (aboutSection && !prefersReducedMotion) {
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const cards = aboutSection.querySelectorAll('.achievement-card');

              cards.forEach((card, index) => {
                setTimeout(() => {
                  card.classList.add('visible');
                }, index * 150);
              });

              observer.unobserve(aboutSection);
            }
          });
        },
        { threshold: 0.2 },
      );

      observer.observe(aboutSection);
    } else if (aboutSection && prefersReducedMotion) {
      // If user prefers reduced motion, make everything visible immediately
      const cards = aboutSection.querySelectorAll('.achievement-card');
      cards.forEach((card) => card.classList.add('visible'));
    }

    // Check if Material Symbols font is loaded
    // If not, show SVG fallbacks
    const checkFontLoading = () => {
      const testElement = document.createElement('span');
      testElement.style.fontFamily = "'Material Symbols Outlined', sans-serif";
      testElement.style.visibility = 'hidden';
      testElement.style.position = 'absolute';
      testElement.style.fontSize = '24px';
      testElement.textContent = 'code';

      document.body.appendChild(testElement);

      // Wait for font loading
      setTimeout(() => {
        // If the font has not loaded, show the SVG fallbacks
        if (
          testElement.offsetWidth === 0 ||
          window
            .getComputedStyle(testElement)
            .fontFamily.indexOf('Material Symbols Outlined') === -1
        ) {
          // Hide icon fonts and show fallbacks
          const iconFonts = document.querySelectorAll('.icon-font');
          const iconFallbacks = document.querySelectorAll('.icon-fallback');

          iconFonts.forEach((icon) => icon.classList.add('hidden'));
          iconFallbacks.forEach((fallback) =>
            fallback.classList.remove('hidden'),
          );
        }

        // Clean up the test element
        document.body.removeChild(testElement);
      }, 500);
    };

    // Run the check after a short delay
    setTimeout(checkFontLoading, 1000);
  });
</script>
